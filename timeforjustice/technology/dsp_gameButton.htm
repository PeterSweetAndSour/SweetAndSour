<html>
<head>
<title>GameButton.java</title>
</head>
<body>
<pre>

import java.awt.*;
import java.awt.event.*;

public class GameButton extends Button {

   //Declaration of class variables
   private boolean minePresent=false;
   private boolean flagged=false;
   private boolean questioned=false;
   private boolean alreadyIdentified=false;
   private boolean moreToCheck=false;
   private int minesNearby;

   //Constructor
   public GameButton(String buttonText) {
      super (buttonText);             //calls the standard Button constructor
      minePresent = false;
      flagged = false;
      questioned = false;
      alreadyIdentified = false;
      minesNearby = 0;
      moreToCheck = false;
   }

   //Methods
   public void setMinePresent(boolean bomb) {
      if (bomb==false)
      minePresent=false;
      if (bomb==true)
      minePresent=true;
   }

   public boolean getMinePresent() {
   return minePresent;
   }

   public void setFlagged(boolean mark) {
      if (mark==false)
      flagged=false;
      if (mark==true)
      flagged=true;
   }

   public boolean getFlagged() {
      return flagged;
   }

   public void setQuestioned(boolean notSure) {
      if (notSure==false)
      questioned=false;
      if (notSure==true)
      questioned=true;
   }

   public boolean getQuestioned() {
      return questioned;
   }

   public void setAlreadyIdentified(boolean clear) {
      if (clear==false)
      alreadyIdentified=false;
      if (clear==true)
      alreadyIdentified=true;
   }

   public boolean getAlreadyIdentified() {
      return alreadyIdentified;
   }

   public int getMinesNearby(GameButton b) {
	   
      switch(minesNearby) {
         case 0:
            break;
         case 1:
            b.setForeground(Color.white); 
            b.setLabel(Integer.toString(minesNearby));
            break;
         case 2:
            b.setForeground(Color.blue); 
            b.setLabel(Integer.toString(minesNearby));
            break;
         case 3:
            b.setForeground(Color.red); 
            b.setLabel(Integer.toString(minesNearby));
            break;
         case 4:
            b.setForeground(Color.cyan); 
            b.setLabel(Integer.toString(minesNearby));
            break;
         case 5:
            b.setForeground(Color.yellow);
            b.setLabel(Integer.toString(minesNearby));
            break;
         case 6:
            b.setForeground(Color.magenta);
            b.setLabel(Integer.toString(minesNearby));
            break;
         case 7:
            b.setForeground(Color.green);
            b.setLabel(Integer.toString(minesNearby));
            break;
         default:
            b.setForeground(Color.black);
            b.setLabel(Integer.toString(minesNearby));
 
      }
      return minesNearby;
   }


   public void setMinesNearby(int num) {
      minesNearby = num;
   }

   public void setMoreToCheck(boolean again) {
      moreToCheck = again;
   }

   public boolean getMoreToCheck() {
      return moreToCheck;
   }

}

</pre>
</body>
</html>
