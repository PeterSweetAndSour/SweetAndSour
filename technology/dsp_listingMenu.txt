&lt;? /*
dsp_menu.php
This page builds the menu based on records in the menus table in the database
and the colors set in the current app_locals.php file.

All menu items with no parent (parentID == 0) are displayed and then secondary
menus are displayed where the parent matches the current folderID.

Must be called from a subdirectory or the paths for the included files are wrong.

If $browserChecked is false, link URLs are appended with a variable to indicate
that the user is requesting another page from the site and therefore that the
browser check has been done and so can now be bypassed.

Variables:
=&gt;| fuseAction
=&gt;| dbserver        (from app_globals.php)
=&gt;| dbuser          &quot;
=&gt;| dbpassword      &quot;
=&gt;| dbname          &quot;
=&gt;| menu1TxtColor   (from app_locals.php)
=&gt;| menu1BGColor    &quot;
=&gt;| menu2TxtColor   &quot;
=&gt;| menu2BGColor    &quot;
=&gt;| menu3TxtColor   &quot;
=&gt;| menu3BGColor    &quot;
*/

//Establish database connection
include '../includes/act_getDBConnection.php';

//For testing
include '../includes/act_displayArray.php';

//Get menuID that go with this fuseAction. Sets $selectedID (datebase query)
include '../qry_menu_getMenuID.php';

/*Declare empty parentArray to be filled with menuID of selected item and its ancestors.
For instance, if the current fuseAction is &quot;letter13b&quot; array will end up as:
	Parent array[0]: 157
	Parent array[1]: 54	(menuID 54 &quot;letter13&quot; is the parent of 157 &quot;letter13b&quot;)
	Parent array[2]: 4   (menuID 4 &quot;lettersOverview&quot; is the parent of 54 &quot;letter13&quot;)
	Parent array[3]: 0   (menuID 0 (indicating top level reached&quot;) is parent of 4)  */
$parentArray = array();

//Add selected item to this array
array_push($parentArray, $selectedID);

//Set up while loop
$menuID = $selectedID;
$continue = true;

while ($continue == true) {
   $continue = false;
   //Get parent of selectedID (datebase query)
   include '../qry_menu_getParentID.php';

   //Append parent to parentArray
   array_push($parentArray, $parentID);
   
   //Reset menuID to parent for next round
   $menuID = $parentID;

   if($menuID != 0)
	  $continue = true;
}

/*Reverse array so top parent processed first and selected item processed last. To use
above example, will end up with
	Parent array[0]: 0
	Parent array[1]: 4
	Parent array[2]: 54
	Parent array[3]: 157  */
$parentArray = array_reverse($parentArray);


//Start menu.
echo &quot;&lt;table border='0' cellspacing='1' cellpadding='1' width='100%'&gt;&quot;;

//Output menu items at each level by calling recursive function
output(0, $parentArray, $selectedID, $dbconnection, $menu1TxtColor, $menu1BGColor, $menu2TxtColor, $menu2BGColor, $menu3TxtColor, $menu3BGColor);

//Conclude menu
echo &quot;&lt;/table&gt;&quot;;

//The output function.  Must pass the variables containing colors since variables set outside 
//the function are not visible inside unless passed in.
function output($arrayPosition, $parentArray, $selectedID, $dbconnection, $menu1TxtColor, $menu1BGColor, $menu2TxtColor, $menu2BGColor, $menu3TxtColor, $menu3BGColor) {
	//Get item at this position
	$parentID = $parentArray[$arrayPosition];

	//Get menu items that are children of this item (database query)
	include '../qry_menu_getChildren.php';

	//For each record in the record set of the previous query
	while( $row = mysql_fetch_array( $rs_children ) ) {
		$childID     = $row[&quot;menuID&quot;];
		$displayText = $row[&quot;displayText&quot;];
		$fuseAction  = $row[&quot;fuseAction&quot;];
		$folderName  = $row[&quot;folderName&quot;];
		$url = &quot;../&quot; . $folderName . &quot;/index.php?fuseAction=&quot; . $fuseAction;
		
		//Append $url with flag to indicate that a page has already been shown and
		//so the browser has been checked.  Will reset session variable on app_globals.php.
		if($browserChecked == false)
			$url = $url . &quot;&pageDisplayed=true&quot;;

		//Menu level is one greater than list position 
		//(level 1 menus are Home, Who we are etc.; level 2 menus are Welcome, What's new etc. )
		$menuLevel = $arrayPosition + 1;

		//Set &quot;filler&quot; to be placed in front of text to push it right. Must have at least one for 
		//menuLevel = 1 so that changeColor function in dsp_outline picks up the correct child node
		//to change the link text color.
		if($menuLevel == 1)
			$filler = &quot;&nbsp;&quot;;
		elseif($menuLevel == 2)
			$filler = &quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot;;
		elseif($menuLevel == 3)
			$filler = &quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;;

		if($childID == $selectedID) { //Condition for end of recursion. NOT a link.
			//Get the name of the variable that holds the color
			$colorVariableName = &quot;\$menu&quot; . $menuLevel . &quot;TxtColor&quot;;  //Backslash is to excape dollar sign.

			//Set a new variable ($color) with the value of this variable
			eval (&quot;   \$color = \&quot;$colorVariableName\&quot;;   &quot;);
			
			//Create a table row with one cell containing the selected menu item. No rollover effects.
			echo &quot;&lt;tr&gt;&lt;td bgcolor='&quot; . $color . &quot;'&gt;&lt;p class='menu&quot; . $menuLevel . &quot;NoLink'&gt;&quot; . $filler . $displayText . &quot;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&quot;;
		}
		else {  //A LINK.
			//Get the name of the variable that holds the standard table cell color
			$colorVariableName = &quot;\$menu&quot; . $menuLevel . &quot;BGColor&quot;;  //Backslash is to excape dollar sign.

			//Set a new variable ($color) with the value of this variable
			eval (&quot;   \$color_std = \&quot;$colorVariableName\&quot;;   &quot;);

			//Get the name of the variable that holds the table cell color when the mouse is over it.
			$colorVariableName = &quot;\$menu&quot; . $menuLevel . &quot;TxtColor&quot;;  //Backslash is to excape dollar sign.

			//Set a new variable ($color) with the value of this variable
			eval (&quot;   \$color_over = \&quot;$colorVariableName\&quot;;   &quot;);

			//Create a table row with one cell containing the menu item.
			echo &quot;&lt;tr&gt;&lt;td bgcolor='&quot; . $color_std . &quot;' onMouseOver=\&quot;changeColor(this, '&quot; . $color_over . &quot;', 'menu&quot; . $menuLevel . &quot;Over', 'pointer')\&quot; onMouseOut=\&quot;changeColor(this, '&quot; . $color_std . &quot;', 'menu&quot; . $menuLevel . &quot;', 'auto')\&quot; onMouseDown=\&quot;window.location.href='&quot; . $url . &quot;'\&quot;&gt;&lt;p&gt;&lt;b&gt;&quot; . $filler . &quot;&lt;/b&gt;&lt;a class='menu&quot; . $menuLevel . &quot;' href='&quot; . $url . &quot;'&gt;&quot; . $displayText . &quot;&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&quot;; //Need to have &quot;filler&quot; inside bold tags &lt;b&gt; so that spaces fill the same width as those preceding links.
		}

		if(array_search($childID, $parentArray)):
			$nextListPosition = $arrayPosition + 1;
			//Make recursive call to output function
			output($nextListPosition, $parentArray, $selectedID, $dbconnection, $menu1TxtColor, $menu1BGColor, $menu2TxtColor, $menu2BGColor, $menu3TxtColor, $menu3BGColor);
		endif;

	}
	return;
}

?&gt;
